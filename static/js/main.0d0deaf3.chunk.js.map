{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","api.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","className","role","id","to","HomePage","PersonRow","person","name","sex","born","died","fatherName","motherName","PeopleTable","people","map","PeoplePage","useState","setPeople","fetchError","setFetchError","useEffect","fetchPeople","a","fetch","then","json","response","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"0NAEaA,EAAmB,kBAC9B,qBAAKC,UAAU,SAASC,KAAK,aAAa,aAAW,kBAArD,SACE,qBAAKC,GAAG,qBAAqBF,UAAU,cAAvC,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,cAAvB,kBAIA,cAAC,IAAD,CAAMG,GAAG,UAAUH,UAAU,cAA7B,4BCVKI,EAAW,kBACtB,4C,sCCKWC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,qBAAIN,UAAU,SAAd,UACE,6BAAKM,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,iBCNHC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,wBAAOd,UAAU,oBAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGc,EAAOC,KAAI,SAAAT,GAAM,OAChB,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOC,eCjBlBS,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,4BAAAC,EAAA,6DAClBH,GAAc,GADI,kBCPfI,MAAM,qEACVC,MAAK,SAAAX,GAAM,OAAIA,EAAOY,UDMH,OAGVC,EAHU,OAKhBT,EAAUS,GALM,gDAOhBP,GAAc,GAPE,yDAAH,qDAWjBE,MACC,IAGD,qCACE,6CACEH,EAEE,mFADA,cAAC,EAAD,CAAaL,OAAQA,QE3BlBc,EAAe,kBAC1B,iDCwBaC,EAlBO,kBACpB,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CACED,KAAK,QACLC,QACE,cAAC,IAAD,CAAU5B,GAAG,IAAI6B,SAAO,MAG5B,cAAC,IAAD,CAAOF,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aCf/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d0deaf3.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const Header: React.FC = () => (\n  <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n    <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n      <div className=\"navbar-start\">\n        <Link to=\"/\" className=\"navbar-item\">\n          Home\n        </Link>\n\n        <Link to=\"/people\" className=\"navbar-item\">\n          People\n        </Link>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1>Home page</h1>\n);\n","import React from 'react';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr className=\"Person\">\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.fatherName}</td>\n    <td>{person.motherName}</td>\n  </tr>\n);\n","import React from 'react';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table className=\"PeopleTable table\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow key={person.name} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [fetchError, setFetchError] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setFetchError(false);\n      try {\n        const response = await getPeople();\n\n        setPeople(response);\n      } catch (error) {\n        setFetchError(true);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1>People page</h1>\n      {!fetchError\n        ? <PeopleTable people={people} />\n        : <p>An error occured wile loading people from server! </p>}\n    </>\n  );\n};\n","export const getPeople = () => {\n  // eslint-disable-next-line max-len\n  return fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(people => people.json());\n};\n","export const NotFoundPage = () => (\n  <h1>Page not found</h1>\n);\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header/Header';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route\n        path=\"/home\"\n        element={\n          <Navigate to=\"/\" replace />\n        }\n      />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}